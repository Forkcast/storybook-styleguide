"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));var _react=_interopRequireWildcard(require("react"));var _style=_interopRequireDefault(require("./style"));var _component=_interopRequireDefault(require("../../../../../Base/Header/component"));var _component2=_interopRequireDefault(require("../../../../../Base/Panel/component"));var _component3=_interopRequireDefault(require("../../../../../Base/Table/component"));var _component4=_interopRequireDefault(require("../../../../../Base/Button/component"));var _component5=_interopRequireDefault(require("./NoteDialog/component"));var _props=require("./props");function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var Component=function Component(_ref){var classes=_ref.classes,rows=_ref.rows,action=_ref.action;var _useState=(0,_react.useState)(true),_useState2=(0,_slicedToArray2.default)(_useState,2),hideDialog=_useState2[0],setHideDialog=_useState2[1];var _useState3=(0,_react.useState)(rows),_useState4=(0,_slicedToArray2.default)(_useState3,2),notes=_useState4[0],setNotes=_useState4[1];return _react.default.createElement(_react.default.Fragment,null,_react.default.createElement(_component5.default,{hidden:hideDialog,onSave:function onSave(e,text,type,date){var note={"key":"notes_row_added","columns":[{"key":"note_added_text","value":text},{"key":"note_added_type","value":type},{"key":"note_added_user","value":"Admin"},{"key":"note_added_date","value":date}]};notes.push(note);setNotes(notes);setHideDialog(true);action(text,type,date);},onClose:function onClose(e){return setHideDialog(true);}}),_react.default.createElement(_style.default,{className:classes.join(' ')},_react.default.createElement(_component2.default,null,_react.default.createElement("div",{className:'note-headers'},_react.default.createElement(_component.default,null,"Notes"),_react.default.createElement(_component4.default,{onClick:function onClick(e){return setHideDialog(false);}},"Add Note")),_react.default.createElement(_component3.default,{empty:'There are no notes associated with this user yet.',headers:[{"key":"Note","value":"Note"},{"key":"Note type","value":"Note type"},{"key":"Created by","value":"Created by"},{"key":"Created at","value":"Created at"}],rows:notes}))));};Component.defaultProps=_props.defaultProps;var _default=Component;exports.default=_default;